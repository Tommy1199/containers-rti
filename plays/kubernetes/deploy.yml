---
# ------------------------------------------------------------------------------
- include: ../base/ntp.yml
- include: ../base/cockpit.yml
- include: ../base/disable-firewall.yml
- include: ../weave/enable.yml
# ------------------------------------------------------------------------------
- name: deploy master
  hosts: master
  tasks:
    # --------------------------------------------------------------------------
    - name: install etcd
      yum:
        name: etcd
        state: latest
    - name: install kubernetes
      yum:
        name: kubernetes
        state: latest
    # --------------------------------------------------------------------------
    - name: set ETCD_LISTEN_CLIENT_URLS
      command: "sed -i 's/\\(ETCD_LISTEN_CLIENT_URLS=\"\\).*\\(\"\\)/\\1{{ item }}\\2/g' /etc/etcd/etcd.conf"
      with_items: "http:\\/\\/0.0.0.0:2379"
    - name: set KUBE_API_ADDRESS
      command: "sed -i 's/\\(KUBE_API_ADDRESS=\"--insecure-bind-address=\\).*\\(\"\\)/\\1{{ item }}\\2/g' /etc/kubernetes/apiserver"
      with_items: "0.0.0.0"
    # --------------------------------------------------------------------------
    - name: ensure services are enabled and running
      service:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items:
        - etcd.service
        - kube-apiserver.service
        - kube-controller-manager.service
        - kube-scheduler.service
    # --------------------------------------------------------------------------
    - name: check for network definition
      command: etcdctl get /atomic.io/network/config
      register: etcd_network_config
      ignore_errors: yes
    - name: setup network in etcd
      command: etcdctl mk /atomic.io/network/config '{"Network":"172.17.0.0/16"}'
      when: etcd_network_config.stderr.find('Key not found') != -1
    # --------------------------------------------------------------------------
    - name: install kubernetes extension for cockpit
      yum:
        name: cockpit-kubernetes
        state: latest
    - name: restart cockpit to enable extension
      service:
        name: cockpit.socket
        state: restarted
        enabled: yes
# ------------------------------------------------------------------------------
- name: deploy nodes
  hosts: nodes
  tasks:
    # --------------------------------------------------------------------------
    - name: install flannel
      yum:
        name: flannel
        state: latest
    - name: install kubernetes
      yum:
        name: kubernetes
        state: latest
    # --------------------------------------------------------------------------
    - name: set FLANNEL_ETCD_ENDPOINTS
      command: "sed -i 's/\\(FLANNEL_ETCD_ENDPOINTS=\"\\).*\\(\"\\)/\\1{{ item }}\\2/g' /etc/sysconfig/flanneld"
      with_items: "http:\\/\\/{{ groups['master'][0] }}:2379"
    - name: set KUBE_MASTER
      command: "sed -i 's/\\(KUBE_MASTER=\"--master=\\).*\\(\"\\)/\\1{{ item }}\\2/g' /etc/kubernetes/config"
      with_items: "http:\\/\\/{{ groups['master'][0] }}:8080"
    - name: set KUBELET_ADDRESS
      command: "sed -i 's/\\(KUBELET_ADDRESS=\"--address=\\).*\\(\"\\)/\\1{{ item }}\\2/g' /etc/kubernetes/kubelet"
      with_items: "0.0.0.0"
    - name: set KUBELET_HOSTNAME
      command: "sed -i 's/\\(KUBELET_HOSTNAME=\"--hostname-override=\\).*\\(\"\\)/\\1{{ item }}\\2/g' /etc/kubernetes/kubelet"
      with_items: "{{ inventory_hostname }}"
    - name: set KUBELET_API_SERVER
      command: "sed -i 's/\\(KUBELET_API_SERVER=\"--api-servers=\\).*\\(\"\\)/\\1{{ item }}\\2/g' /etc/kubernetes/kubelet"
      with_items: "http:\\/\\/{{ groups['master'][0] }}:8080"
    - name: set KUBELET_ARGS
      command: "sed -i 's/\\(KUBELET_ARGS=\"\\).*\\(\"\\)/\\1{{ item }}\\2/g' /etc/kubernetes/kubelet"
      with_items: " --network-plugin=cni --network-plugin-dir=\\/etc\\/cni\\/net.d"
    # --------------------------------------------------------------------------
    - name: ensure services are enabled and running
      service:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items:
        - kube-proxy.service
        - kubelet.service
        - flanneld.service
    # --------------------------------------------------------------------------
    - name: restart docker daemon
      service:
        name: docker.service
        state: restarted
...
